import random
import string
import csv
import pandas as pd

# CSV 파일에서 시설명 목록을 가져오가
def fetch_facility_names(filename):
    df = pd.read_csv(filename)
    facility_names = df['시설명'].tolist()
    return facility_names

# 유저 아이디 생성
def generate_user_id():
    prefix = ''.join(random.choices(string.ascii_lowercase, k=5))
    suffix = ''.join(random.choices(string.digits + string.ascii_lowercase, k=4))
    return f"{prefix}{suffix}"

# 평점 생성
def generate_rating():
    return random.randint(1, 5)

# 긍정적 코멘트 생성
positive_comments = [
    "정말 훌륭한 시설입니다!", "깨끗하고 편안했어요.", "서비스가 정말 좋았어요.", "추천합니다!",
    "다시 방문하고 싶어요.", "가족과 함께 즐거운 시간을 보냈습니다.", "시설 관리가 잘 되어 있었습니다.", "매우 만족합니다.", "재방문 의사 있습니다.",
    "주차 공간이 넉넉해서 편리했어요.", "여기서 많은 추억을 만들었어요.", "가격 대비 만족도가 높습니다.", "직원들이 친절하고 도움이 많이 되었습니다.",
    "환경이 매우 청결하고 좋았습니다.", "조용하고 한적한 곳이라 마음에 들었습니다.", "아이들과 함께 즐거운 시간을 보냈어요.", "시설 이용이 편리하고 안내도 잘 되어 있습니다.",
    "뷰가 정말 아름다웠어요!", "다양한 활동을 즐길 수 있어서 좋았어요.", "위치가 좋아서 접근성이 뛰어납니다.", "음식이 맛있었고 다양한 메뉴가 제공되었습니다.",
    "시설 내 편의시설이 잘 갖춰져 있었습니다.", "체험 프로그램이 매우 유익했습니다.", "시설 내부가 넓고 쾌적합니다.", "가족 여행에 추천합니다.",
    "한 번쯤은 꼭 가볼 만한 곳입니다.", "여름에 가면 더욱 좋을 것 같아요.", "전망대에서 보는 풍경이 최고였습니다.", "시설이 현대적이고 깔끔합니다.",
    "아이들이 놀기에 안전한 환경입니다.", "다양한 편의시설이 있어 편리했습니다.", "자연과 함께하는 시간이 힐링이 되었어요.", "여유롭고 편안한 분위기가 좋았습니다.",
    "주변 경관이 아름답습니다.", "친구들과 함께 와서 즐거운 시간을 보냈습니다.", "다음에 또 오고 싶어요.", "전체적으로 기대 이상이었습니다.",
    "서비스와 시설 모두 훌륭합니다.", "시설 사용이 매우 편리했습니다.", "가성비가 좋습니다.", "친구들에게 추천할 만한 곳입니다.",
    "편안하고 조용한 분위기에서 휴식을 취할 수 있었습니다.", "자연 경관이 매우 아름답습니다.", "시설이 현대적이고 매우 잘 유지되고 있습니다.",
    "편리한 위치에 있어 접근하기 쉬웠습니다.", "서비스가 매우 친절하고 전문적이었습니다.", "전반적으로 만족스러운 경험이었습니다.",
    "아이들이 즐겁게 놀 수 있는 다양한 시설이 마련되어 있습니다.", "다양한 프로그램과 활동이 있어 좋았습니다.", "깨끗하고 정돈된 환경이 좋았습니다.",
    "휴식을 취하기에 최적의 장소입니다.", "시설이 매우 잘 관리되고 있었습니다.", "전반적으로 좋은 경험이었으며, 추천하고 싶습니다.",
    "다양한 시설과 편의시설이 있어 매우 편리했습니다.", "가족 모두가 만족한 여행이었습니다.", "서비스와 시설이 매우 인상적이었습니다.",
    "다양한 편의시설과 친절한 서비스가 인상적이었습니다.", "시설이 매우 깔끔하고 현대적이었습니다.", "시설 내 모든 것이 잘 정돈되어 있어 사용이 편리했습니다.",
    "친절한 직원들이 인상적이었습니다.", "시설 이용이 매우 편리하고 좋았습니다.", "청결한 환경과 좋은 서비스에 만족했습니다.",
    "시설의 위치가 좋아 접근성이 뛰어났습니다.", "다양한 활동과 프로그램이 있어 좋았습니다.", "가격 대비 매우 만족스러운 경험이었습니다.",
    "친구들에게 추천할 만한 좋은 곳입니다.", "휴식을 취하기에 최적의 장소였습니다.", "시설의 청결 상태가 매우 좋았습니다.",
    "편안하고 조용한 분위기에서 휴식을 취할 수 있었습니다.", "자연 경관이 매우 아름답습니다.", "서비스와 시설 모두 훌륭했습니다.",
    "시설 사용이 매우 편리했습니다.", "가격 대비 만족도가 높았습니다.", "친절한 직원들이 인상적이었습니다."
]

# 부정적 코멘트 생성
negative_comments = [
    "조금 아쉬운 부분이 있었어요.", "시설이 조금 낡았지만 여전히 좋았습니다.", "조금 붐비긴 했지만 전체적으로 만족합니다.",
    "시설 관리가 잘 안되고 있었습니다.", "주차 공간이 부족했습니다.", "가격 대비 만족도가 낮았습니다.", "직원들이 조금 더 친절했으면 좋겠습니다.",
    "환경이 청결하지 않았습니다.", "시설이 너무 붐비고 혼잡했습니다.", "아이들과 함께하기에는 불편한 점이 많았습니다.",
    "시설 이용이 불편했고 안내가 부족했습니다.", "뷰가 별로였습니다.", "활동이 다양하지 않았습니다.", "위치가 불편해서 접근성이 떨어졌습니다.",
    "음식이 별로 맛있지 않았고 메뉴가 부족했습니다.", "편의시설이 부족했습니다.", "체험 프로그램이 유익하지 않았습니다.", "시설 내부가 좁고 불편했습니다.",
    "가족 여행에 적합하지 않았습니다.", "한 번쯤 가볼 만하지만 다시 방문하고 싶지는 않습니다.", "여름에는 너무 더웠습니다.", "전망대에서 보는 풍경이 실망스러웠습니다.",
    "시설이 낡고 깨끗하지 않았습니다.", "아이들이 놀기에 안전하지 않았습니다.", "편의시설이 부족해서 불편했습니다.", "자연과의 접촉이 부족했습니다.",
    "휴식을 취하기에는 적합하지 않았습니다.", "시설 내 모든 것이 정돈되지 않았습니다.", "주변 경관이 별로였습니다.", "친구들과 함께 가기에는 적합하지 않았습니다.",
    "시설이 매우 실망스러웠습니다.", "서비스와 시설 모두 개선이 필요합니다.", "시설 사용이 불편했습니다.", "가격 대비 품질이 좋지 않았습니다.",
    "시설의 청결 상태가 불만족스러웠습니다.", "친구들에게 추천하기 어려운 곳입니다.", "전반적으로 만족스럽지 않았습니다.", "다양한 시설과 편의시설이 부족했습니다.",
    "주변 자연 경관이 좋지 않았습니다.", "가족 모두가 만족하지 않았습니다.", "서비스와 시설이 매우 실망스러웠습니다.", "시설 내 모든 것이 정비되지 않았습니다.",
    "시설 이용이 매우 불편했습니다.", "다양한 프로그램과 활동이 부족했습니다.", "청결한 환경이 아니었습니다.", "시설이 현대적이지 않고 매우 낡았습니다.",
    "시설의 위치가 불편해서 접근성이 떨어졌습니다.", "다양한 활동과 프로그램이 부족했습니다.", "시설 내 모든 것이 정비되지 않았습니다.", "서비스가 불만족스러웠습니다.",
    "가격 대비 만족도가 낮았습니다.", "친절한 직원들이 부족했습니다.", "시설이 불편하고 깨끗하지 않았습니다.", "편안하고 조용한 분위기가 아니었습니다.",
    "자연 경관이 좋지 않았습니다.", "서비스와 시설 모두 개선이 필요합니다.", "시설 사용이 매우 불편했습니다.", "가격 대비 만족도가 낮았습니다."
]

# 랜덤 리뷰 생성
def generate_reviews(facility_names, num_reviews):
    reviews = []
    for _ in range(num_reviews):
        facility_name = random.choice(facility_names)
        userid = generate_user_id()
        rating = generate_rating()
        if rating >= 3:
            comment = random.choice(positive_comments)
        else:
            comment = random.choice(negative_comments)
        reviews.append([facility_name, userid, rating, comment])
    return reviews

# 리뷰를 CSV 파일로 저장
def save_reviews_to_csv(reviews, filename):
    with open(filename, mode='w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow(["시설명", "userid", "평점", "코멘트"])  # CSV 파일 헤더
        writer.writerows(reviews)

# 메인 코드
if __name__ == "__main__":
    # 시설명 목록을 가져오는 CSV 파일 경로
    facility_filename = 'facility_name.csv'
    facility_names = fetch_facility_names(facility_filename)
    
    # 생성할 리뷰 수
    num_reviews = 4210
    reviews = generate_reviews(facility_names, num_reviews)
    
    # 리뷰를 저장할 CSV 파일 경로
    review_filename = 'review.csv'
    save_reviews_to_csv(reviews, review_filename)
    
    print(f"{num_reviews}개의 리뷰가 '{review_filename}' 파일에 저장되었습니다.")
